{"version":3,"sources":["styles/List.module.css","styles/Game.module.css","styles/Home.module.css","styles/Heard.module.css","components/Game.js","components/Heard.js","components/Home.js","components/List.js","components/App.js","utilities/storage.js","serviceWorker.js","index.js"],"names":["module","exports","pickWord","list","lastWord","word","Math","floor","length","random","value","gameReducer","state","action","type","score","scoreClass","guesses","Error","Game","result","name","stopGame","useReducer","dispatch","useEffect","console","log","setTimeout","className","styles","main","questionBox","question","scoreBox","stopBox","stop","onClick","Heard","listening","toggleListening","confidence","toFixed","transcript","button","Home","lists","addList","openList","removeList","startGame","useState","addingList","setAddingList","addBox","addName","trim","add","listTitle","Object","keys","map","key","listItem","play","listName","List","closeList","addWord","removeWord","wordBox","title","doneButton","remove","App","recognizer","setRecognizer","setListening","setResult","setListName","initialValue","stored","window","localStorage","getItem","JSON","parse","err","error","setItem","stringify","setValue","useLocalStorage","setLists","gameName","setGameName","abort","r","webkitSpeechRecognition","continuous","onresult","e","results","start","showGame","Boolean","showList","showHome","removed","values","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5179587f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wordBox\":\"List_wordBox__206_B\",\"result\":\"List_result__6_RAR\",\"remove\":\"List_remove__2DPGM\",\"add\":\"List_add__2hXL9\",\"title\":\"List_title__1c5e1\",\"list\":\"List_list__1As5q\",\"word\":\"List_word__P8IiM\",\"doneButton\":\"List_doneButton__2hot6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Game_main__3kfs-\",\"questionBox\":\"Game_questionBox__OIFa7\",\"question\":\"Game_question__Kj1Pm\",\"stopBox\":\"Game_stopBox__316yV\",\"stop\":\"Game_stop__19gTv\",\"scoreBox\":\"Game_scoreBox__3YX-j\",\"score\":\"Game_score__ExuI3\",\"match\":\"Game_match__n3Ylu\",\"fail\":\"Game_fail__4odzX\",\"guess\":\"Game_guess__1PW-2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addBox\":\"Home_addBox__3vMoM\",\"addName\":\"Home_addName__13oPr\",\"listTitle\":\"Home_listTitle__zakTw\",\"listItem\":\"Home_listItem__3JybY\",\"listName\":\"Home_listName__9Ce35\",\"add\":\"Home_add__3udk8\",\"remove\":\"Home_remove__3hBO9\",\"play\":\"Home_play__1oEde\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Heard_main__3cjLR\",\"button\":\"Heard_button__2YzMd\",\"confidence\":\"Heard_confidence__3p4_B\"};","import React, { useEffect, useReducer } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from '../styles/Game.module.css';\n\nfunction pickWord(list, lastWord) {\n  let word = lastWord;\n  while (word === lastWord) {\n    const index = Math.floor(list.length * Math.random());\n    word = list[index].value;\n  }\n  return word;\n}\n\nfunction gameReducer(state, action) {\n  switch (action.type) {\n    case 'guess':\n      if (action.word === state.word) {\n        return {\n          list: state.list,\n          word: pickWord(state.list, state.word),\n          score: state.score + 1,\n          scoreClass: 'match',\n          guesses: 1,\n        };\n      } else if (state.guesses > 0) {\n        return {\n          list: state.list,\n          word: state.word,\n          score: state.score,\n          scoreClass: 'guess',\n          guesses: state.guesses - 1,\n        };\n      }\n      return {\n        list: state.list,\n        word: pickWord(state.list, state.word),\n        score: state.score - 1,\n        scoreClass: 'fail',\n        guesses: 1\n      };\n    case 'clearClass':\n      return {\n        ...state,\n        scoreClass: '',\n      };\n    default:\n      throw Error('Default');\n  }\n}\n\nfunction Game({ result, name, list, stopGame }) {\n  const [state, dispatch] = useReducer(gameReducer, { word: pickWord(list, ''), score: 0, guesses: 1, scoreClass: '', list: list});\n\n  useEffect(() => {\n    console.log('SCORE', state.score);\n    //??? upate graphics here\n  }, [state.score]);\n\n  useEffect(() => {\n    if (result) {\n      dispatch({type: 'guess', word: result});\n      setTimeout(() => dispatch({type: 'clearClass'}), 1000);\n    }\n  }, [result]);\n\n  return (\n    <main className={styles.main}>\n      <div className={styles.questionBox}>\n        <div className={styles.question}>\n          {state.word}\n        </div>\n      </div>\n      <div className={styles.scoreBox}>\n        <div className={`${styles[state.scoreClass]} ${styles.score}`}>\n          {state.score}\n        </div>\n      </div>\n      <div className={styles.stopBox}>\n        <button className={styles.stop} onClick={stopGame}>Stop</button>\n      </div>\n    </main>\n  );\n}\n\nGame.propTypes = {\n  result: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  list: PropTypes.array.isRequired,\n  stopGame: PropTypes.func.isRequired,\n};\n\nexport default Game;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from '../styles/Heard.module.css';\n\nfunction Heard({ listening, result, toggleListening }) {\n  return (\n    <main className={styles.main}>\n      <span className={styles.confidence}>\n        {result && `${(100 * result.confidence).toFixed(1)}%`}\n      </span>\n      <span>\n        {result && result.transcript}\n      </span>\n      <span>\n        <button className={styles.button} onClick={toggleListening}>\n          { listening ? 'Stop' : 'Start' }\n        </button>\n      </span>\n    </main>\n  )\n}\n\nHeard.propTypes = {\n  listening: PropTypes.bool.isRequired,\n  result: PropTypes.object,\n  toggleListening: PropTypes.func.isRequired,\n};\n\nexport default Heard;\n","import React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from '../styles/Home.module.css';\n\nfunction Home({ listening, result, lists, addList, removeList, openList, startGame }) {\n  const [addingList, setAddingList] = useState(false);\n\n  function add() {\n    if (result) {\n      addList(result.transcript.trim());\n      setAddingList(false);\n    }\n  }\n\n  return (\n    <Fragment>\n      { addingList &&\n        <div className={styles.addBox}>\n          <div className={styles.addName}>{result && result.transcript}</div>\n          <button onClick={add} className={styles.add}>+</button>\n        </div>\n      }\n      <div>\n        <div className={styles.listTitle}>\n          <span>Lists</span>\n          <button onClick={() => setAddingList(true)} className={styles.add}>+</button>\n        </div>\n        <ul>\n          { Object.keys(lists).map((name) => (\n            <li key={name} className={styles.listItem}>\n              <button onClick={() => startGame(name)} className={styles.play}>></button>\n              <button onClick={() => openList(name)} className={styles.listName}>{name}</button>\n              {/*<button onClick={() => removeList(name)} className={styles.remove}>x</button>*/}\n            </li>\n          ))}\n    </ul>\n      </div>\n    </Fragment>\n  );\n}\n\nHome.propTypes = {\n  listening: PropTypes.bool.isRequired,\n  result: PropTypes.object,\n  lists: PropTypes.object.isRequired,\n  addList: PropTypes.func.isRequired,\n  openList: PropTypes.func.isRequired,\n  startGame: PropTypes.func.isRequired,\n};\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from '../styles/List.module.css';\n\nfunction List({ listening, result, listName, list, closeList, addWord, removeWord }) {\n  return (\n    <main className={styles.main}>\n      <div className={styles.wordBox}>\n        <div className={styles.result}>\n          {result && result.transcript}\n        </div>\n        <span>\n          <button className={styles.add} onClick={() => addWord(result.transcript, listName)}>+</button>\n        </span>\n      </div>\n      <div>\n        <div className={styles.title}>\n          {listName}\n          <button className={styles.doneButton} onClick={closeList}>Done</button>\n        </div>\n        <div className={styles.list}>\n          { list && Object.keys(list).map((word) => (\n            <div key={word} className={styles.word}>\n              {word}\n              <button className={styles.remove} onClick={() => removeWord(word, listName)}>x</button>\n            </div>\n          ))}\n        </div>\n      </div>\n    </main>\n  );\n}\n\nList.propTypes = {\n  listening: PropTypes.bool.isRequired,\n  result: PropTypes.object,\n  listName: PropTypes.string.isRequired,\n  list: PropTypes.object.isRequired,\n  closeList: PropTypes.func.isRequired,\n  addWord: PropTypes.func.isRequired,\n  removeWord: PropTypes.func.isRequired,\n};\n\nexport default List;\n","import React, { Fragment, useState } from 'react';\n\nimport { useLocalStorage } from '../utilities/storage';\nimport Game from './Game';\nimport Heard from './Heard';\nimport Home from './Home';\nimport List from './List';\n\nfunction App() {\n  const [recognizer, setRecognizer] = useState(null);\n  const [listening, setListening] = useState(false);\n  const [result, setResult] = useState(null);\n  const [listName, setListName] = useState(null);\n  const [lists, setLists] = useLocalStorage('wordLists', {});\n  const [gameName, setGameName] = useState(null);\n\n  function toggleListening() {\n    if (listening) {\n      recognizer.abort();\n      setRecognizer(null);\n      setResult(null);\n      setListening(false);\n    } else {\n      const r = new window.webkitSpeechRecognition();\n      r.continuous = true;\n      r.onresult = (e) => {\n        const result = e.results[e.results.length - 1][0];\n        setResult(result);\n      };\n      r.start();\n      setRecognizer(r);\n      setListening(true);\n    }\n  }\n\n  function addList(name) {\n    if (!lists[name]) {\n      setLists((lists) => ({\n        ...lists,\n        [name]: {},\n      }));\n    }\n  }\n\n  function removeList(name) {\n    const removed = { ...lists };\n    delete removed[name]\n    setLists(removed);\n  }\n\n  function openList(name) {\n    setListName(name);\n  }\n\n  function closeList() {\n    setListName(null);\n  }\n\n  function startGame(name) {\n    if (!listening) {\n      toggleListening();\n    }\n    setGameName(name);\n  }\n\n  function stopGame(name) {\n    setGameName(null);\n  }\n\n  function addWord(word, name) {\n    const list = lists[name];\n    word = word.trim();\n    list[word] = { value: word };\n    setLists({\n      ...lists,\n      [name]: {\n        ...list,\n      }\n    });\n  }\n\n  function removeWord(word, name) {\n    const list = lists[name];\n    delete list[word];\n    setLists({\n      ...lists,\n      [name]: {\n        ...list,\n      }\n    });\n  }\n\n  const showGame = Boolean(gameName);\n  const showList = !showGame && Boolean(listName);\n  const showHome = !showGame && !showList;\n\n  return (\n    <Fragment>\n      <header>\n        <Heard\n          listening={listening}\n          result={result}\n          toggleListening={toggleListening}\n        />\n      </header>\n      <main className='page'>\n        <div className='accent appName'><div>Say</div><div>Word</div></div>\n        { showHome &&\n          <Home\n            listening={listening}\n            result={result}\n            lists={lists}\n            addList={addList}\n            removeList={removeList}\n            openList={openList}\n            startGame={startGame}\n          />\n        }\n        { showList && \n          <List\n            listening={listening}\n            result={result}\n            listName={listName}\n            list={lists[listName]}\n            closeList={closeList}\n            addWord={addWord}\n            removeWord={removeWord}\n          />\n        }\n        { showGame &&\n          <Game\n            result={(result && result.transcript.trim()) || ''}\n            name={gameName}\n            list={Object.values(lists[gameName])}\n            stopGame={stopGame}\n          />\n        }\n      </main>\n    </Fragment>\n  );\n}\n\nexport default App;\n","import { useEffect, useState } from 'react';\n\nexport function useLocalStorage(key, initialValue) {\n  const [value, setValue] = useState(() => {\n    const stored = window.localStorage.getItem(key);\n    if (stored) {\n      try {\n        return JSON.parse(stored);\n      } catch (err) {\n        console.error('localStorage error:', key, stored, err);\n      }\n    }\n    window.localStorage.setItem(key, JSON.stringify(initialValue));\n    return initialValue;\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(value));\n  }, [key, value]);\n\n  return [value, setValue];\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/normalize.css';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}